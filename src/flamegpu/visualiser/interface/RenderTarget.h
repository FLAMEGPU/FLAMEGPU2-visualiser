#ifndef SRC_FLAMEGPU_VISUALISER_INTERFACE_RENDERTARGET_H_
#define SRC_FLAMEGPU_VISUALISER_INTERFACE_RENDERTARGET_H_
#include <glm/vec2.hpp>

#include "flamegpu/visualiser/util/GLcheck.h"

namespace flamegpu {
namespace visualiser {

/**
 * Interface shared by RenderBuffer, Texture2D and Texture2D_Multisample
 * These are the 3 classes which can be rendered to in a frag shader
 */
class RenderTarget {
 public:
    virtual ~RenderTarget() { }
    /**
     * Resizes the object
     * @parma width The new width
     * @parma height The new height
     */
    virtual void resize(const unsigned int &width, const unsigned int &height) { resize({ width, height }); }
    /**
     * Resizes the object
     * @parma dimensions The new dimensions
     */
    virtual void resize(const glm::uvec2 &dimensions) = 0;
    /**
     * Returns the OpenGL allocated name as generated by glGenTextures() or similar
     */
    virtual GLenum getName() const = 0;
};

}  // namespace visualiser
}  // namespace flamegpu

#endif  // SRC_FLAMEGPU_VISUALISER_INTERFACE_RENDERTARGET_H_
